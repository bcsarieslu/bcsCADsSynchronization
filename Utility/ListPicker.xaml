<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Converter="clr-namespace:BCS.CADs.Synchronization.Utility"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    
                    >
    <!--xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"-->
    <!--xmlns:ViewModels="clr-namespace:BCS.CADs.Synchronization.ViewModels"
    <ViewModels:MainWindowViewModel x:Key="MainWindowViewModel"/>
    -->
 

    <Converter:ListboxConveter x:Key="listboxConveter" />
    <ControlTemplate x:Key="IconButton" TargetType="{x:Type ToggleButton}">
        <Border>
            <ContentPresenter />
        </Border>
    </ControlTemplate>
   
    <Style x:Key="tbListStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <Border BorderBrush="Gray" BorderThickness="0.8" Margin="0.9,0.7,0.9,0.5" Opacity="0.6">
                            <ScrollViewer x:Name="PART_ContentHost" Background="{TemplateBinding Background}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Center"/>
                        </Border>
                        <ToggleButton Template="{StaticResource IconButton}"
                              MaxHeight="21" 
                              Margin="-1,0,0,0" 
                              Name="PopUpImageButton" 
                              Focusable="False"
                              IsChecked="False">
                            <Image Source="..\Images\dropdown-arrow.png" Stretch="Uniform" Visibility="Hidden" HorizontalAlignment="Right" Name="ImgPicker" >
                            </Image>
                        </ToggleButton>
                        <Popup IsOpen="{Binding Path=IsChecked, ElementName=PopUpImageButton, Mode=TwoWay}" x:Name="CustomPopup" Margin="0,-1,0,0" PopupAnimation="Fade" StaysOpen="False">
                            <Grid>
                                <!--ItemsSource="{Binding Source={StaticResource MainWindowViewModel},Path=ListItem}"-->
                                <ListView Name="ListView1"  ItemsSource="{Binding ListItems}" DisplayMemberPath="Label" HorizontalAlignment="Left" VerticalAlignment="Top" Width="170" Height="85" 
                                      SelectedItem="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Text, Mode=TwoWay, Converter={StaticResource listboxConveter}}">
                                </ListView>                                
                                <Button Width="20" Height="20" HorizontalAlignment="Right" VerticalAlignment="Bottom" Name="btn">X                                
                                    <Control.Triggers>
                                        <EventTrigger RoutedEvent="Button.Click">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <BooleanAnimationUsingKeyFrames Storyboard.TargetName="PopUpImageButton" Storyboard.TargetProperty="IsChecked">
                                                        <DiscreteBooleanKeyFrame KeyTime="00:00:00" Value="False"></DiscreteBooleanKeyFrame>
                                                    </BooleanAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </Control.Triggers>
                                </Button>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Visibility" TargetName="ImgPicker" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="Visibility" TargetName="ImgPicker" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>