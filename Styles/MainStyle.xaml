<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <SolidColorBrush  x:Key="LeftDefaultColor">#A46F41</SolidColorBrush>
    <SolidColorBrush  x:Key="TitleDefaultColor">#EAEAEA</SolidColorBrush>
    <SolidColorBrush  x:Key="TopDefaultColor">#CC8A52</SolidColorBrush>
    <SolidColorBrush  x:Key="ButtonTriggerDefaultColor">#B97D49</SolidColorBrush>

    <Style x:Key="MyBackGroundL" TargetType="FrameworkElement">
        <Setter Property="TextBlock.Cursor" Value="Arrow"/>
        <Setter Property="TextBlock.Background" Value="#DF7F00"/>
        <Setter Property="TextBlock.Foreground" Value="Transparent"/>
        <Setter Property="TextBlock.Width" Value="40"/>
        <Setter Property="TextBlock.Height" Value="2000"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="WrapPanel.Background" Value="#DF7F00"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="MyBackGroundR" TargetType="FrameworkElement">
        <Setter Property="TextBlock.Cursor" Value="Arrow"/>
        <Setter Property="TextBlock.Background" Value="#DF7F00"/>
        <Setter Property="TextBlock.Foreground" Value="Transparent"/>
        <Setter Property="TextBlock.Width" Value="0"/>
        <Setter Property="TextBlock.Height" Value="2000"/>
        <Setter Property="Visibility" Value="Collapsed"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="WrapPanel.Background" Value="#DF7F00"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="btn_Add" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Button.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border TextBlock.Foreground="{TemplateBinding Foreground}"
                            x:Name="Border"
                            CornerRadius="2"
                            BorderThickness="1"
                            Background="Transparent">
                        <TextBlock Margin="0,0,0,5" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding ElementName=btn_Add,Path=Content}" FontSize="27"></TextBlock>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="Blue"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="resetsize" TargetType="Button">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Button.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border  Background="Transparent">
                        <Path Stretch="Uniform" Width="14" Height="14"  Fill="Black" Data="M2,22.414024L2,30.000023 9.5859995,30.000023z M30,20.000023L32,20.000023 32,32.000023 20,32.000023 20,30.000023 30,30.000023z M22.41397,1.9999995L29.999968,9.5859974 29.999968,1.9999995z M0,2.28882E-05L12,2.28882E-05 12,2.000023 2,2.000023 2,12.000023 0,12.000023z M17.585968,0L31.999968,0 31.999968,14.413999 25.50001,7.9140418 7.9139872,25.500011 14.413999,32.000023 0,32.000023 0,17.586025 6.4999857,24.08601 24.086008,6.5000399z" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="btn_Sub" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Button.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border TextBlock.Foreground="{TemplateBinding Foreground}"
                            x:Name="Border"
                            CornerRadius="2"
                            BorderThickness="1"
                            Background="Transparent">
                        <TextBlock Margin="0,0,0,5" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding ElementName=btn_Sub,Path=Content}" FontSize="32"></TextBlock>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="Blue"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyCheckBoxStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                            <ColumnDefinition></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <!-- BulletDecorator is used to provide baseline alignment between the checkmark and the Content -->
                        <BulletDecorator  x:Name="test" Grid.Column="0">
                            <BulletDecorator.Bullet>
                                <Grid Width="16" Height="16">
                                    <Border x:Name="Border" 
                                                        Background="{TemplateBinding Background}"
                                                        BorderBrush="Black" 
                                                        BorderThickness="1"/>
                                    <Canvas HorizontalAlignment="Center"
                                                            VerticalAlignment="Center" Height="14" Width="14">
                                        <Path x:Name="CheckMark" Data="M28.718018,0L32,3.2819897 10.666016,24.616999 0,13.951997 3.2810059,10.670007 10.666016,18.055033z" Stretch="Uniform" Fill="#FFFFFFFF" Width="14" Height="14" Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5"/>
                                    </Canvas>
                                </Grid>
                            </BulletDecorator.Bullet>
                        </BulletDecorator>
                        <ContentPresenter Grid.Column="1" 
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                            Margin="5,0,0,0" 
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                            RecognizesAccessKey="True"/>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="CheckMark"/>
                            <Setter Property="Background" Value="White" TargetName="Border"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Background" Value="Blue" TargetName="Border"/>
                            <Setter Property="BorderBrush" Value="Blue" TargetName="Border"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="Purple" TargetName="Border"/>
                            <Setter Property="BorderBrush" Value="Purple" TargetName="Border"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="White" TargetName="Border"/>
                            <Setter Property="BorderBrush" Value="black" TargetName="Border"/>
                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                            <ColumnDefinition></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <!-- BulletDecorator is used to provide baseline alignment between the checkmark and the Content -->
                        <BulletDecorator  x:Name="test" Grid.Column="0">
                            <BulletDecorator.Bullet>
                                <Grid Width="16" Height="16">
                                    <Border x:Name="Border" 
                                                        Background="{TemplateBinding Background}"
                                                        BorderBrush="Black" 
                                                        BorderThickness="1"/>
                                    <Canvas HorizontalAlignment="Center"
                                                            VerticalAlignment="Center" Height="14" Width="14">
                                        <Path x:Name="CheckMark" Data="M28.718018,0L32,3.2819897 10.666016,24.616999 0,13.951997 3.2810059,10.670007 10.666016,18.055033z" Stretch="Uniform" Fill="#FFFFFFFF" Width="14" Height="14" Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5"/>
                                    </Canvas>
                                </Grid>
                            </BulletDecorator.Bullet>
                        </BulletDecorator>
                        <ContentPresenter Grid.Column="1" 
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                            Margin="5,0,0,0" 
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                            RecognizesAccessKey="True"/>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="CheckMark"/>
                            <Setter Property="Background" Value="White" TargetName="Border"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Background" Value="Blue" TargetName="Border"/>
                            <Setter Property="BorderBrush" Value="Blue" TargetName="Border"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="Purple" TargetName="Border"/>
                            <Setter Property="BorderBrush" Value="Purple" TargetName="Border"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="White" TargetName="Border"/>
                            <Setter Property="BorderBrush" Value="black" TargetName="Border"/>
                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="UserInfoBtn">
        <Setter Property="Margin" Value="-15,0,-15,0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="Background"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" />
                        <ContentPresenter x:Name="contentPresenter"
                                            HorizontalAlignment="Left"
                                            Margin="25,0,0,0"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                            OpacityMask="{x:Null}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                    Value="True">
                            <Setter Property="Background"
                                    Value="#DDDDDD" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="WrapPanel" x:Key="lockedwp">
        <Setter Property="TextBlock.Foreground" Value="Black"/>
        <Setter Property="WrapPanel.Background" Value="#FFCB86"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Style.Triggers>
            <Trigger Property ="WrapPanel.IsMouseOver" Value="True">
                <Setter Property="TextBlock.Foreground" Value="Black"/>
                <Setter Property="WrapPanel.Background" Value="#FFCB86"/>
            </Trigger>
            <DataTrigger Binding="{Binding ElementName=pluginModule,Path=Content}" Value="0">
                <Setter Property="WrapPanel.Background" Value="Red"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="ToolTip">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="HasDropShadow" Value="True" />
        <Setter Property="TextBlock.Foreground" Value="Black"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Border Name="Border" CornerRadius="4"
                                    BorderThickness="1"
                                    Width="{TemplateBinding Width}"
                                    Height="{TemplateBinding Height}"
                                    Background="AliceBlue"
                                    BorderBrush="Black">
                        <ContentPresenter Margin="4" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="selectTextBox">
        <Setter Property="TextBox.Visibility" Value="Collapsed"/>
        <Setter Property="TextBlock.FontSize" Value="20"/>
        <Setter Property="TextBox.Height" Value="0"/>
        <Setter Property="TextBox.MinWidth" Value="400"/>
        <Setter Property="TextBox.HorizontalAlignment" Value="Center"/>
        <Setter Property="TextBox.VerticalAlignment" Value="Top"/>
        <Setter Property="TextBox.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border Name="Border"
                            CornerRadius="2"
                            Padding="2"
                            BorderThickness="1"
                            Background="{TemplateBinding Background}">
                        <Border.BorderBrush>
                            <SolidColorBrush Color="#3D96FF" />
                        </Border.BorderBrush>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                                Value="#FFEAE5" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ReadOnly">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                                Value="#ACD2FF" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ScrollViewer Margin="0"
                        x:Name="PART_ContentHost" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TextBox" x:Key="searchTextBoxStyle">
        <Setter Property="TextBlock.Foreground" Value="Blue"/>
        <Setter Property="TextBlock.FontSize" Value="14"/>
        <Setter Property="TextBlock.Height" Value="24"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="LightBrush" Color="#C99567"/>
    <SolidColorBrush x:Key="MidBrush" Color="#B57E4D"/>
    <SolidColorBrush x:Key="DarkBrush" Color="#A46F40"/>

    <Style TargetType="{x:Type Button}" x:Key="3DButtonStyle">
        <Setter Property="Height" Value="32"/>
        <Setter Property="Width" Value="32"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                        <Border CornerRadius="6" x:Name="BottomRightBorder" BorderBrush="{StaticResource DarkBrush}" BorderThickness="0,0,2,4.5"/>
                        <Border CornerRadius="6" x:Name="MiddleBorder" Margin="0,0,1.5,4" Background="{StaticResource MidBrush}">
                            <ContentPresenter Margin="{TemplateBinding Padding}"/>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MiddleBorder" Property="Background" Value="#F0AB2F"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BottomRightBorder" Property="BorderThickness" Value="0,0,1,2"/>
                            <Setter TargetName="MiddleBorder" Property="Margin" Value="0,0,1,2"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="PlugInFuncsButtonStyle">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Width" Value="230"/>
        <Setter Property="Height" Value="150"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="xBackground"
                                   Opacity="1"
                                   Fill="{TemplateBinding Background}"
                                   StrokeThickness="0.35">
                        </Rectangle>
                        <ContentPresenter Margin="{TemplateBinding Padding}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="xBackground" Value="LightGray"/>
                            <Setter Property="Opacity" TargetName="xBackground" Value="0.8"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Storyboard x:Key="showMe">
        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
        </ObjectAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Width">
            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="300"/>
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Height">
            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="300"/>
        </DoubleAnimationUsingKeyFrames>
        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)">
            <EasingColorKeyFrame KeyTime="0:0:0" Value="Transparent"/>
        </ColorAnimationUsingKeyFrames>
        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)">
            <EasingColorKeyFrame KeyTime="0:0:0.45" Value="Black"/>
        </ColorAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames BeginTime="0:0:2.6" Storyboard.TargetProperty="Width">
            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames BeginTime="0:0:2.6" Storyboard.TargetProperty="Height">
            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
        </DoubleAnimationUsingKeyFrames>
        <ObjectAnimationUsingKeyFrames BeginTime="0:0:3" Storyboard.TargetProperty="Visibility">
            <DiscreteObjectKeyFrame KeyTime="0:0:2" Value="{x:Static Visibility.Collapsed}"/>
        </ObjectAnimationUsingKeyFrames>
    </Storyboard>

    <Storyboard x:Key="hideMe">
        <DoubleAnimation Storyboard.TargetProperty="Width" Duration="0:0:0.2" To="0"/>
        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
            <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Collapsed}"/>
        </ObjectAnimationUsingKeyFrames>
        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)">
            <EasingColorKeyFrame KeyTime="0:0:0.05" Value="Transparent"/>
        </ColorAnimationUsingKeyFrames>
    </Storyboard>

    <Storyboard x:Key="showSelectTextBox">
        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
        </ObjectAnimationUsingKeyFrames>
        <DoubleAnimation Storyboard.TargetProperty="Height" Duration="0:0:0.3" To="30"/>
    </Storyboard>

    <Storyboard x:Key="hideSelectTextBox">
        <DoubleAnimation Storyboard.TargetProperty="Height" Duration="0:0:0.3" To="0"/>
    </Storyboard>
</ResourceDictionary>
