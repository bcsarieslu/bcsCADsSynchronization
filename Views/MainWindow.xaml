<Window
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="clr-namespace:BCS.CADs.Synchronization.Views"
    xmlns:vm="clr-namespace:BCS.CADs.Synchronization"
    xmlns:cm="clr-namespace:BCS.CADs.Synchronization.CommandModel"
    xmlns:ViewModels="clr-namespace:BCS.CADs.Synchronization.ViewModels" 
    x:Class="BCS.CADs.Synchronization.Views.MainWindow"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:ac="clr-namespace:AdornedControl;assembly=AdornedControl"
    mc:Ignorable="d"
    x:Name="win"
    WindowStartupLocation="CenterScreen" SnapsToDevicePixels="True" WindowStyle="None" ResizeMode="NoResize">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!--Resources的引入-->
                <ResourceDictionary Source="/BCS.CADs.Synchronization;component/Resources/CADsSynchronizer.xaml" />
                <ResourceDictionary Source="/BCS.CADs.Synchronization;component/Resources/DataGridStyle.xaml" />
                <ResourceDictionary Source="/BCS.CADs.Synchronization;component/Resources/ScrollViewerStyle.xaml" />
                <ResourceDictionary Source="/BCS.CADs.Synchronization;component/Resources/TreeViewStyle.xaml" />
                <ResourceDictionary Source="/BCS.CADs.Synchronization;component/Resources/MainResource.xaml" />
                <!--Style的引入-->
                <ResourceDictionary Source="/BCS.CADs.Synchronization;component/Styles/ScrallBarStyle.xaml" />
                <ResourceDictionary Source="/BCS.CADs.Synchronization;component/Styles/SvgImages.xaml" />
                <ResourceDictionary Source="/BCS.CADs.Synchronization;component/Styles/ButtonChangeStyle.xaml" />
                <ResourceDictionary Source="/BCS.CADs.Synchronization;component/Styles/InnovatorLogin.xaml"/>
                <ResourceDictionary Source="/BCS.CADs.Synchronization;component/Styles/CoreResourceDictionary.xaml"/>
                <ResourceDictionary Source="/BCS.CADs.Synchronization;component/Styles/DataWindowResourceDictionary.xaml"/>
                <ResourceDictionary Source="/BCS.CADs.Synchronization;component/Styles/UserControlResourceDictionary.xaml"/>
                <ResourceDictionary Source="/BCS.CADs.Synchronization;component/Styles/TextBlockDefaultStyle.xaml"/>
                <ResourceDictionary Source="/BCS.CADs.Synchronization;component/Styles/MainStyle.xaml"/>
                <ResourceDictionary Source="/BCS.CADs.Synchronization;component/Styles/GlassButton.xaml"/>
                <ResourceDictionary Source="/BCS.CADs.Synchronization;component/Styles/CommonStyle.xaml"/>
                <ResourceDictionary Source="/BCS.CADs.Synchronization;component/Styles/AddTemplateStyle.xaml" />
                <ResourceDictionary Source="/BCS.CADs.Synchronization;component/Styles/ButtonDefaultStyle.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <ViewModels:MainWindowViewModel x:Key="test"/>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            <vm:DependencyObjectProxy x:Key="proxy" Value="{x:Reference win}"/>
            <!--<cm:ViewModelLocator x:Key="viewmodel"/>-->
        </ResourceDictionary>
    </Window.Resources>
    <Window.DataContext>
        <Binding Source="{StaticResource MainWindowViewModel}"/>
    </Window.DataContext>
    <!--<Window.DataContext>
        <ViewModels:MainWindowViewModel/>
    </Window.DataContext>-->

    <Grid x:Name="mainGrid">
        <Grid.RowDefinitions>
            <RowDefinition Height="2"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="7*"/>
            <RowDefinition Height="3*"/>
            <RowDefinition Height="20"/>
            <RowDefinition Height="2"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="2.5"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="2.5"/>
        </Grid.ColumnDefinitions>

        <!--===========================================================================-->

        <!--設定Resize的邊框-->
        <Rectangle x:Name="leftTop" Grid.Row="0" Grid.Column="0" Style="{StaticResource ResizerBorder}"/>
        <Rectangle x:Name="left" Grid.RowSpan="7" Grid.Column="0" Style="{StaticResource ResizerBorder}"/>
        <Rectangle x:Name="right" Grid.RowSpan="7" Grid.Column="2" Style="{StaticResource ResizerBorder}"/>
        <Rectangle x:Name="righttop" Grid.Row="0" Grid.Column="2" Style="{StaticResource ResizerBorder}"/>
        <Rectangle x:Name="up" Grid.Row="0" Style="{StaticResource ResizerBorder}" Grid.ColumnSpan="3"/>
        <Rectangle x:Name="down" Grid.Row="6" Style="{StaticResource ResizerBorder}" Grid.ColumnSpan="3"/>
        <Rectangle x:Name="leftdown" Grid.Row="7" Grid.Column="0" Style="{StaticResource ResizerBorder}" Panel.ZIndex="1"/>
        <Rectangle x:Name="rightdown" Grid.Row="7" Grid.Column="2" Style="{StaticResource ResizerBorder}" Panel.ZIndex="1"/>

        <!--設定Window的Title-->
        <Grid Background="{StaticResource TitleDefaultColor}" Grid.Column="1" Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <!--<StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0,0,0,0">
                <Image Height="28" Width="28" Margin="3,0,0,0" Source="../images/bcslogo.ico"/>
                <TextBlock Foreground="{StaticResource ThemeColorBrush}" Text="{DynamicResource mainTitle}" FontSize="20" Margin="5,2,0,0" FontWeight="Normal" HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="Segoe WP" />
            </StackPanel>-->
            <Thumb Opacity="0" Grid.Column="0" Grid.ColumnSpan="3" Background="Transparent" Foreground="{x:Null}" DragDelta="Thumb_OnDragDelta"/>
            <TextBlock x:Name="positionUse" Width="0.1" Height="0.1"/>
            <Image Margin="5" HorizontalAlignment="Left" Source="/BCS.CADs.Synchronization;component/Images/OpenPLM.png" Stretch="Uniform" Width="Auto"/>
            <WrapPanel Grid.Column="2" HorizontalAlignment="Right" VerticalAlignment="Center">
                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Width="50">
                    <ToggleButton x:Name="LoginImage" Width="26" Height="24" Command="{Binding RefushUserInformation}">
                        <ToggleButton.Style>
                            <Style TargetType="ToggleButton" BasedOn="{StaticResource LoginImageStyle}">
                                <Style.Triggers>
                                    <EventTrigger RoutedEvent="ToggleButton.MouseEnter">
                                        <EventTrigger.Actions>
                                            <BeginStoryboard Storyboard="{StaticResource ToBig}">
                                            </BeginStoryboard>
                                        </EventTrigger.Actions>
                                    </EventTrigger>
                                    <EventTrigger RoutedEvent="ToggleButton.MouseLeave">
                                        <EventTrigger.Actions>
                                            <BeginStoryboard Storyboard="{StaticResource ToSmall}">
                                            </BeginStoryboard>
                                        </EventTrigger.Actions>
                                    </EventTrigger>
                                    <DataTrigger Binding="{Binding ElementName=UserPopup, Path=IsOpen}" Value="True">
                                        <Setter Property="IsHitTestVisible" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ToggleButton.Style>
                    </ToggleButton>
                </StackPanel>
                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0,0,8,0">
                    <Button Margin="0,0,8,0" ToolTip="{DynamicResource maximize}" Width="22" Height="22" Style="{StaticResource WindowActionButton}" Click="btnActionMinimize_OnClick">
                        <Path Width="16" Height="16" RenderTransformOrigin="0.5,0.5" Data="M7.9750088,17.000004L24.024009,17.000004C24.577003,17.000004 25.024009,17.447025 25.024009,18.000004 25.024009,18.552982 24.577003,19.000004 24.024009,19.000004L7.9750088,19.000004C7.4219998,19.000004 6.9750087,18.552982 6.9750089,18.000004 6.9750087,17.447025 7.4219998,17.000004 7.9750088,17.000004z M2,2L2,26 30,26 30,2z M0,0L32,0 32,28 0,28z" Stretch="Uniform" Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}, Mode=FindAncestor}}"/>
                    </Button>
                    <Button Margin="0,0,8,0" ToolTip="{DynamicResource maximize}" Width="22" Height="22" Style="{StaticResource WindowActionButton}" Click="btnActionMaximize_OnClick">
                        <Path Width="16" Height="16" RenderTransformOrigin="0.5,0.5" Data="M19.519989,18.835993L32,18.835993 19.519989,31.317999z M0,18.835993L12.480011,18.835993 12.480011,31.317999z M19.519989,0L32,12.480007 19.519989,12.480007z M12.480011,0L12.480011,12.480007 0,12.480007z" Stretch="Uniform" Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}, Mode=FindAncestor}}"/>
                    </Button>
                    <Button ToolTip="{DynamicResource close}" Width="22" Height="22" Style="{StaticResource WindowActionButtonClose}" Click="btnActionClose_Click">
                        <Path Width="16" Height="16" Stretch="Fill" Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}, Mode=FindAncestor}}" Data="F1 M 26.9166,22.1667L 37.9999,33.25L 49.0832,22.1668L 53.8332,26.9168L 42.7499,38L 53.8332,49.0834L 49.0833,53.8334L 37.9999,42.75L 26.9166,53.8334L 22.1666,49.0833L 33.25,38L 22.1667,26.9167L 26.9166,22.1667 Z "/>
                    </Button>
                </StackPanel>
            </WrapPanel>
        </Grid>

        <Popup x:Name="UserPopup" 
               StaysOpen="False" 
               IsOpen="{Binding IsChecked, ElementName=LoginImage, Mode=TwoWay}"
               PlacementTarget="{Binding ElementName=LoginImage}" 
               PopupAnimation="Fade"
               AllowsTransparency="True"
               Placement="Bottom" VerticalOffset="3" HorizontalOffset="-180">

            <Border x:Name="userInfo" BorderBrush="Black" BorderThickness="1"
                            Visibility="Visible" Margin="0,0,5,0" Panel.ZIndex="1"
                            CornerRadius="5" Background="White" >
                <WrapPanel Orientation="Vertical" Margin="15,5,15,5">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" Width="250">
                        <Image Width="45" Height="45" Source="{Binding UserToggleButtonSource,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"/>
                        <StackPanel>
                            <TextBlock Margin="15,5,0,0" x:Name="userName2" Text="{Binding UserLoginName}" Foreground="Black" FontSize="14" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <TextBlock.Style>
                                    <Style>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=dataBaseName,Path=Text}" Value="">
                                                <Setter Property="TextBlock.Text" Value="{DynamicResource notLogin}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                            <StackPanel Orientation="Horizontal" Margin="10,5,0,0">
                                <Image Margin="2" HorizontalAlignment="Left" Height="21" Source="{StaticResource DataBaseDrawingImage}">
                                    <Image.Style>
                                        <Style>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ElementName=dataBaseName,Path=Text}" Value="">
                                                    <Setter Property="Image.Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                                <TextBlock Text="" x:Name="dataBaseName" FontWeight="Bold" Foreground="Black" FontSize="14" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                            </StackPanel>
                        </StackPanel>
                    </StackPanel>
                    <Rectangle Width="300" Fill="#949494" Margin="-15,10,-15,10" Height="1"/>
                    <StackPanel Orientation="Horizontal">
                        <Label Margin="5" FontSize="18" VerticalAlignment="Center" Content="{DynamicResource scale}"/>
                        <Button x:Name="btn_Sub" Margin="40,0,0,0" Content="－" Height="30" Width="30" Command="{Binding SubScale}" CommandParameter="{Binding RelativeSource={RelativeSource self}}" Style="{StaticResource btn_Sub}"/>
                        <Label FontSize="16" VerticalAlignment="Center" x:Name="scaleLabel" Content="{Binding ScaleValue,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"/>
                        <Label FontSize="16" VerticalAlignment="Center" Content="%"/>
                        <Button x:Name="btn_Add" Content="+" Height="30" Width="30" Command="{Binding AddScale}" CommandParameter="{Binding RelativeSource={RelativeSource self}}" Style="{StaticResource btn_Add}"/>
                        <Button x:Name="resetsize" Height="30" Width="30" Command="{Binding ResetScale}" CommandParameter="{Binding RelativeSource={RelativeSource self}}" Style="{StaticResource resetsize}"/>
                    </StackPanel>
                    <Rectangle Width="300" Fill="#949494" Margin="-15,10,-15,10" Height="1"/>
                    <Button Style="{StaticResource UserInfoBtn}" Content="{DynamicResource computerInfo}" x:Name="systemInformationBtn" Click="btnActionSystemInformation_OnClick"/>
                    <Button Style="{StaticResource UserInfoBtn}" Content="{DynamicResource logout}" x:Name="userInfoLogout" Visibility="Collapsed" Command="{Binding UserInformationLogout}" CommandParameter="{Binding RelativeSource={RelativeSource self}}"/>
                </WrapPanel>
                <Border.Effect>
                    <DropShadowEffect Color="#d24726" BlurRadius="3" ShadowDepth="0" Opacity="1" />
                </Border.Effect>
                <Border.Style>
                    <Style TargetType="{x:Type Border}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=DisplayGrid,Path=IsPressed}" Value="true">
                                <Setter Property="Visibility" Value="Hidden"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=LoginImage,Path=IsHitTestVisible}" Value="True">
                                <Setter Property="Visibility" Value="Hidden"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=LoginImage,Path=IsHitTestVisible}" Value="False">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
            </Border>
        </Popup>


        <!--設定Window的內容-->
        <Grid Background="{StaticResource TopDefaultColor}" VerticalAlignment="Stretch" Grid.Row="2" Grid.Column="1" x:Name="grid2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="85"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <Image HorizontalAlignment="Left" Source="/BCS.CADs.Synchronization;component/Images/BCS_CSD_Image2.png" Stretch="Uniform" Width="Auto"/>
            <!--<Canvas x:Name="CanvasViewFile" Grid.Row="1"  Visibility="Collapsed"      Grid.Column="0"   >
                    <local:ViewFile VerticalAlignment="Top"  Width="40" Height="40" Canvas.Top="0" Canvas.Left="0"  />
                </Canvas>-->
            <WrapPanel Orientation="Horizontal" HorizontalAlignment="Right" Grid.Column="1">
                <Button x:Name="btn_Search" IsEnabled="False" Style="{StaticResource GlassButton}" ToolTip="{DynamicResource search}"  Command="{Binding SyncCADsListView}" CommandParameter="{Binding Source={StaticResource proxy}, Path=Value}">
                    <Image>
                        <Image.Style>
                            <Style>
                                <Setter Property="Image.Source" Value="{StaticResource ResourceKey=ExecuteSearchDrawingImage}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsMouseOver,
                                                RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"
                                                Value="True">
                                        <Setter Property="Image.Source" Value="{StaticResource ResourceKey=ExecuteSearchDrawingImageTriggerUse}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                </Button>

                <Button x:Name="btn_Edit" IsEnabled="False" Style="{StaticResource GlassButton}" ToolTip="{DynamicResource execute}" Command="{Binding EditPropertiesView}" CommandParameter="{Binding Source={StaticResource proxy}, Path=Value}">
                    <Image>
                        <Image.Style>
                            <Style>
                                <Setter Property="Image.Source" Value="{StaticResource ResourceKey=ReplicationTxnLogDrawingImage}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsMouseOver,
                                                RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"
                                                Value="True">
                                        <Setter Property="Image.Source" Value="{StaticResource ResourceKey=ReplicationTxnLogDrawingImageTriggerUse}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                </Button>

                <!-- CAD Sturcture -->
                <Button x:Name="btn_TreeView" IsEnabled="False"  Style="{StaticResource GlassButton}" ToolTip="{DynamicResource filesync}"  Command="{Binding TreeStructureView}" CommandParameter="{Binding Source={StaticResource proxy}, Path=Value}">
                    <Image>
                        <Image.Style>
                            <Style>
                                <Setter Property="Image.Source" Value="{StaticResource ResourceKey=BlockExternalDrawingImage}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsMouseOver,
                                                RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"
                                                Value="True">
                                        <Setter Property="Image.Source" Value="{StaticResource ResourceKey=BlockExternalDrawingImageTriggerUse}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                </Button>

                <!--<Button Style="{StaticResource GlassButton}" ToolTip="{DynamicResource filesync}"  Command="{Binding SearchTreeView}" CommandParameter="{Binding Source={StaticResource proxy}, Path=Value}">
                                    <Path Data="M18.993002,21.034996L15.277992,25.322998 17.426993,25.322998 17.426993,29.305 20.715002,29.305 20.715002,25.322998 22.709995,25.322998z M18.86199,18.880997C22.484989,18.880997 25.421999,21.817001 25.421999,25.441002 25.421999,29.062996 22.484989,32 18.86199,32 15.238991,32 12.301995,29.062996 12.301995,25.441002 12.301995,21.817001 15.238991,18.880997 18.86199,18.880997z M2.9550003,16.838997L2.9550003,18.237999 12.773996,18.237999 12.773996,16.838997z M2.9550003,10.777L2.9550003,12.175995 17.023003,12.175995 17.023003,10.777z M14.612999,0.98999786L19.034994,5.697998 15.544991,5.697998C15.029991,5.697998,14.612999,5.2799988,14.612999,4.7649994z M2.0220017,0L13.264993,0 13.264993,5.0250015C13.264993,6.1409988,14.169992,7.0459976,15.286003,7.0459976L20.000998,7.0459976 20.000998,17.159996C19.627997,17.109001 19.249991,17.073997 18.86199,17.073997 14.249001,17.073997 10.495997,20.826996 10.495997,25.439995 10.495997,26.519997 10.708994,27.548996 11.083002,28.497002L2.0220017,28.497002C0.90600521,28.497002,-1.86752E-07,27.591995,0,26.475998L0,2.0199966C-1.86752E-07,0.90399933,0.90600521,0,2.0220017,0z" Stretch="Uniform" Fill="#FF030303" Width="22" Height="22" Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5"/>
                                </Button>-->

                <Button x:Name="btn_Execute"  IsEnabled="False" Style="{StaticResource GlassButton}" ToolTip="{DynamicResource synchronization}"  Command="{Binding SyncExecute}" CommandParameter="{Binding Source={StaticResource proxy}, Path=Value}">
                    <Image>
                        <Image.Style>
                            <Style>
                                <Setter Property="Image.Source" Value="{StaticResource ResourceKey=ProductCharacteristicDrawingImage}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsMouseOver,
                                                RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"
                                                Value="True">
                                        <Setter Property="Image.Source" Value="{StaticResource ResourceKey=ProductCharacteristicDrawingImageTriggerUse}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                </Button>
            </WrapPanel>
            <Border CornerRadius="3" BorderThickness="1" 
                        Grid.Column="2" Margin="-150,0,0,0"
                        BorderBrush="Black" 
                        Width="300" Height="25"
                        Background="White"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center">
                <StackPanel Orientation="Horizontal">
                    <Image Margin="3,1,0,0">
                        <Image.Style>
                            <Style>
                                <Setter Property="Image.Source" Value="{StaticResource ResourceKey=FilterSearchDrawingImage}"/>
                                <Setter Property="Image.Width" Value="20"/>
                            </Style>
                        </Image.Style>
                    </Image>
                    <TextBox x:Name="searchTextBox" Width="270"
                             TextChanged="searchTextBox_TextChanged">
                        <TextBox.Resources>
                            <VisualBrush x:Key="HintText" TileMode="None" Stretch="None" AlignmentX="Left">
                                <VisualBrush.Visual>
                                    <TextBlock Panel.ZIndex="2"
                                               Text="Search CAD" Foreground="#C3C3C3" 
                                               Background="Transparent" 
                                               Height="26" FontSize="14"
                                               Padding="3,3,0,0"/>
                                </VisualBrush.Visual>
                            </VisualBrush>
                        </TextBox.Resources>
                        <TextBox.Style>
                            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource searchTextBoxStyle}">
                                <Setter Property="Border.BorderBrush" Value="Transparent"/>
                                <Style.Triggers>
                                    <Trigger Property="Text" Value="{x:Null}">
                                        <Setter Property="Background" Value="{StaticResource HintText}"/>
                                    </Trigger>
                                    <Trigger Property="Text" Value="">
                                        <Setter Property="Background" Value="{StaticResource HintText}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                </StackPanel>
            </Border>
            <WrapPanel HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,5,0" Grid.Column="3">
                <Button x:Name="btn_Message" Grid.Column="3" Style="{StaticResource 3DButtonStyle}" ToolTip="{DynamicResource message}"  Command="{Binding ShowMessages}" CommandParameter="{Binding Source={StaticResource proxy}, Path=Value}">
                    <Grid>
                        <Ellipse Visibility="{Binding ShowMessageDot,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Fill="#BCFDFF" Width="10" Height="10" VerticalAlignment="Top" Margin="10,3,0,0" Panel.ZIndex="1"/>
                        <Image>
                            <Image.Style>
                                <Style>
                                    <Setter Property="Image.Source" Value="{StaticResource ResourceKey=NotificationsDrawingImage}"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsMouseOver,
                                                RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"
                                                Value="True">
                                            <Setter Property="Image.Source" Value="{StaticResource ResourceKey=NotificationsDrawingImageTriggerUse}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </Grid>
                </Button>
            </WrapPanel>
            <Grid.LayoutTransform>
                <ScaleTransform ScaleX="{Binding SetScale}" ScaleY="{Binding SetScale}"/>
            </Grid.LayoutTransform>
        </Grid>

        <Grid Grid.Row="3" Background="#F5ECC3" Grid.Column="1" Grid.RowSpan="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="2*"/>
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="1" Grid.ColumnSpan="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="15"/>
                </Grid.RowDefinitions>

                <Grid Grid.Row="0" Grid.ColumnSpan="2" Grid.RowSpan="2" x:Name="DisplayGrid">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <Grid x:Name="selectedDirectoryGrid" Grid.Row="0" Visibility="{Binding SelectedDirectoryGridVisibility,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid Grid.Row="0" Margin="0,15,0,0" >
                                <TextBlock Margin="15,0,0,0" Text="{DynamicResource selectFolder}"  Height="26" Style="{StaticResource titleTextBoxStyle}" />
                                <!-- 選取路徑 -->
                            </Grid>
                            <Grid Grid.Column="0" Grid.Row="1">
                                <!-- Command="{Binding SyncExecute}" CommandParameter="{Binding Source={StaticResource proxy}, Path=Value}" Image : BrowseFolderDrawingImage -->
                                <Button Margin="17,0,0,0" VerticalAlignment="Center" Style="{StaticResource GlassButton}" Name="selectedDirectory" ToolTip="{DynamicResource selectFolder}" Click="SelectFolder_Click"  >
                                    <Image Source="{StaticResource BrowseFolderDrawingImage}"/>
                                </Button>
                            </Grid>
                            <Grid Grid.Column="1" Grid.Row="1">
                                <TextBox Margin="15,0,20,0" x:Name="CADdirectory" Grid.Row="1" Grid.Column="1" VerticalAlignment="Center" Style="{StaticResource TextBoxStyle}" />
                            </Grid>
                        </Grid>
                    </Grid>

                    <WrapPanel x:Name="checkBoxWP" Grid.Row="0" Visibility="{Binding CheckBoxWPVisibility,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                        <CheckBox Margin="20,20,0,0" x:Name="cb_all" Command="{Binding CheckAll}" IsChecked="{Binding CheckAllIsCheck,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" CommandParameter="{Binding Source={StaticResource proxy}, Path=Value}" Content="全選"/>
                        <!--<CheckBox Margin="20,20,0,0">只顯示以選擇</CheckBox>-->
                    </WrapPanel>
                    <Grid Grid.Row="1">
                        <Frame Margin="10" NavigationUIVisibility="Hidden" x:Name="viewPage" Grid.RowSpan="2">
                            <Frame.LayoutTransform>
                                <ScaleTransform ScaleX="{Binding SetScale}" ScaleY="{Binding SetScale}"/>
                            </Frame.LayoutTransform>
                        </Frame>
                    </Grid>
                </Grid>

                <Frame x:Name="RecentFileView" Visibility="{Binding RecentFileViewVisibility,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Margin="0,-0.7,0,0" Grid.Row="0" Grid.RowSpan="2" Grid.ColumnSpan="2"/>
                <Frame x:Name="LoginView" Margin="0,-0.7,0,0" Grid.Row="0" NavigationUIVisibility="Hidden" Background="#F5ECC3" Grid.RowSpan="2" Grid.ColumnSpan="2"/>
                <Frame x:Name="SystemView" Grid.Row="0" NavigationUIVisibility="Hidden" Grid.RowSpan="2" Background="AliceBlue" Visibility="Collapsed" Grid.ColumnSpan="2">
                    <Frame.LayoutTransform>
                        <ScaleTransform ScaleX="{Binding SetScale}" ScaleY="{Binding SetScale}"/>
                    </Frame.LayoutTransform>
                </Frame>

                <ac:AdornedControl Name="LoadingAdorner" Grid.Row="0" Grid.RowSpan="2">
                    <ac:AdornedControl.AdornerContent>
                        <local:LoadingWait></local:LoadingWait>
                    </ac:AdornedControl.AdornerContent>
                </ac:AdornedControl>

                <Canvas x:Name="CanvasViewFile" Grid.Row="1"  Visibility="Visible" Grid.Column="0">
                    <local:ViewFile HorizontalContentAlignment="Left" VerticalContentAlignment="Top" x:Name="viewFile" Width="0" Height="0"/>
                </Canvas>

                <TextBlock x:Name="showStatus" Grid.Row="2" Text="{DynamicResource MainWindow_status}" Padding="10,0,0,0"/>
            </Grid>

            <ScrollViewer Grid.Column="0" HorizontalScrollBarVisibility="Auto">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <!--填補無按鈕的位置-->
                    <WrapPanel Orientation="Horizontal" Grid.Row="8" Background="{StaticResource LeftDefaultColor}"/>

                    <!--Login按鈕-->
                    <Rectangle x:Name="IsCheckMark" Grid.Row="0" Fill="#00F9FF" Width="4" Height="40" Panel.ZIndex="1" HorizontalAlignment="Left"/>
                    <StackPanel Grid.Row="0" Orientation="Horizontal" x:Name="showlogin_SP">
                        <Button x:Name="showLogin" Command="{Binding ShowCommand}" CommandParameter="{Binding RelativeSource={RelativeSource self}}" ToolTip="{DynamicResource login}">
                            <Button.Style>
                                <Style BasedOn="{StaticResource buttondefault}">
                                    <Setter Property="Control.Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Border Background="{TemplateBinding Background}">
                                                    <StackPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                        <Path Style="{StaticResource LoginButtonPath}"/>
                                                        <TextBlock Text="{DynamicResource login}"/>
                                                    </StackPanel>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                                            <Setter Property="Control.Foreground" Value="White"/>
                                            <Setter Property="Control.Background" Value="{StaticResource ButtonTriggerDefaultColor}"/>
                                        </Trigger>
                                        <DataTrigger Binding="{Binding IsMouseOver, ElementName=showlogin_SP}" Value="True">
                                            <Setter Property="Control.Foreground" Value="White"/>
                                            <Setter Property="Control.Background" Value="{StaticResource ButtonTriggerDefaultColor}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <StackPanel.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsMouseOver, ElementName=showlogin_SP}" Value="True">
                                        <Setter Property="Panel.Background" Value="{StaticResource ButtonTriggerDefaultColor}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsMouseOver, ElementName=showLogin}" Value="True">
                                        <Setter Property="Panel.Background" Value="{StaticResource ButtonTriggerDefaultColor}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>
                    </StackPanel>

                    <!--新增範本按鈕-->
                    <StackPanel Orientation="Horizontal" Grid.Row="1" x:Name="newFormTemplateFile_SP">
                        <!-- for test : <Button x:Name="newFormTemplateFile" Command="{Binding ShowCommand}" CommandParameter="{Binding RelativeSource={RelativeSource self}}" > -->
                        <Button x:Name="newFormTemplateFile" Command="{Binding NewFormTemplateFileList}" CommandParameter="{Binding Source={StaticResource proxy}, Path=Value}" ToolTip="{DynamicResource temp2add}">
                            <Button.Style>
                                <Style BasedOn="{StaticResource buttondefault}">
                                    <Setter Property="Button.IsEnabled" Value="False"/>
                                    <Setter Property="Control.Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Border Background="{TemplateBinding Background}">
                                                    <StackPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                        <Path Style="{StaticResource newFormTemplateFileButtonPath}"/>
                                                        <TextBlock Text="{DynamicResource temp2add_UnderText}"/>
                                                    </StackPanel>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="Button.IsMouseOver" Value="True">
                                            <Setter Property="Button.Foreground" Value="White"/>
                                            <Setter Property="Button.Background" Value="{StaticResource ButtonTriggerDefaultColor}"/>
                                            <Setter Property="TextBlock.Foreground" Value="White"/>
                                        </Trigger>
                                        <DataTrigger Binding="{Binding IsMouseOver, ElementName=newFormTemplateFile_SP}" Value="True">
                                            <Setter Property="Button.Foreground" Value="White"/>
                                            <Setter Property="Button.Background" Value="{StaticResource ButtonTriggerDefaultColor}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsEnabled, ElementName=newFormTemplateFile}" Value="False">
                                            <Setter Property="Button.Foreground" Value="#ACACAC"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <StackPanel.Style>
                            <Style>
                                <Setter Property="Panel.Background" Value="#DF7F00"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsMouseOver, ElementName=newFormTemplateFile_SP}" Value="True">
                                        <Setter Property="Panel.Background" Value="{StaticResource ButtonTriggerDefaultColor}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsMouseOver, ElementName=newFormTemplateFile}" Value="True">
                                        <Setter Property="Panel.Background" Value="{StaticResource ButtonTriggerDefaultColor}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsEnabled, ElementName=newFormTemplateFile}" Value="False">
                                        <Setter Property="Button.Cursor" Value="No"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>
                    </StackPanel>

                    <!--PLM同步到CAD的按鈕位置-->
                    <StackPanel Orientation="Horizontal" Grid.Row="2" x:Name="syncFromPLM_SP">
                        <Button x:Name="syncFromPLM" Command="{Binding SyncFromPLMCADsList}" CommandParameter="{Binding Source={StaticResource proxy}, Path=Value}" ToolTip="{DynamicResource plm2cad}">
                            <Button.Style>
                                <Style BasedOn="{StaticResource buttondefault}">
                                    <Setter Property="Button.IsEnabled" Value="False"/>
                                    <Setter Property="Control.Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Border Background="{TemplateBinding Background}">
                                                    <StackPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                        <Image Margin="5,0,0,0" Style="{StaticResource syncFromPLMDrawingImageStyle}" Height="28" VerticalAlignment="Top"/>
                                                        <TextBlock FontSize="10" Text="{DynamicResource plm2cad_UnderText}" x:Name="syncFromPLM_Text"/>
                                                    </StackPanel>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="Button.IsMouseOver" Value="True">
                                            <Setter Property="Button.Foreground" Value="White"/>
                                            <Setter Property="Button.Background" Value="{StaticResource ButtonTriggerDefaultColor}"/>
                                        </Trigger>
                                        <DataTrigger Binding="{Binding IsMouseOver, ElementName=syncFromPLM_SP}" Value="True">
                                            <Setter Property="Button.Foreground" Value="White"/>
                                            <Setter Property="Button.Background" Value="{StaticResource ButtonTriggerDefaultColor}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsEnabled, ElementName=syncFromPLM}" Value="False">
                                            <Setter Property="Button.Foreground" Value="#ACACAC"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <StackPanel.Style>
                            <Style>
                                <Setter Property="Panel.Background" Value="#DF7F00"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsMouseOver, ElementName=syncFromPLM_SP}" Value="True">
                                        <Setter Property="Panel.Background" Value="{StaticResource ButtonTriggerDefaultColor}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsMouseOver, ElementName=syncFromPLM}" Value="True">
                                        <Setter Property="Panel.Background" Value="{StaticResource ButtonTriggerDefaultColor}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsEnabled, ElementName=syncFromPLM}" Value="False">
                                        <Setter Property="Button.Cursor" Value="No"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>
                    </StackPanel>

                    <!--CAD同步至PLM的按鈕-->
                    <StackPanel Orientation="Horizontal" Grid.Row="3" x:Name="syncToPLM_SP">
                        <Button x:Name="syncToPLM" Command="{Binding SyncToPLMCADsList}" CommandParameter="{Binding Source={StaticResource proxy}, Path=Value}" ToolTip="{DynamicResource cad2plm}">
                            <Button.Style>
                                <Style BasedOn="{StaticResource buttondefault}">
                                    <Setter Property="Button.IsEnabled" Value="False"/>
                                    <Setter Property="Control.Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Border Background="{TemplateBinding Background}">
                                                    <StackPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                        <Image Margin="5,0,0,0" Style="{StaticResource syncToPLMDrawingImageStyle}" Height="28" VerticalAlignment="Top"/>
                                                        <TextBlock FontSize="10" Text="{DynamicResource cad2plm_UnderText}" x:Name="syncToPLM_Text"/>
                                                    </StackPanel>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="Button.IsMouseOver" Value="True">
                                            <Setter Property="Button.Foreground" Value="White"/>
                                            <Setter Property="Button.Background" Value="{StaticResource ButtonTriggerDefaultColor}"/>
                                        </Trigger>
                                        <DataTrigger Binding="{Binding IsMouseOver, ElementName=syncToPLM_SP}" Value="True">
                                            <Setter Property="Button.Foreground" Value="White"/>
                                            <Setter Property="Button.Background" Value="{StaticResource ButtonTriggerDefaultColor}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsEnabled, ElementName=syncToPLM}" Value="False">
                                            <Setter Property="Button.Foreground" Value="#ACACAC"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <StackPanel.Style>
                            <Style>
                                <Setter Property="Panel.Background" Value="#DF7F00"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsMouseOver, ElementName=syncToPLM_SP}" Value="True">
                                        <Setter Property="Panel.Background" Value="{StaticResource ButtonTriggerDefaultColor}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsMouseOver, ElementName=syncToPLM}" Value="True">
                                        <Setter Property="Panel.Background" Value="{StaticResource ButtonTriggerDefaultColor}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsEnabled, ElementName=syncToPLM}" Value="False">
                                        <Setter Property="Button.Cursor" Value="No"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>
                    </StackPanel>

                    <!--從PLM下載圖檔按鈕-->
                    <StackPanel Orientation="Horizontal" Grid.Row="4" x:Name="loadFromPLM_SP">
                        <Button x:Name="loadFromPLM" ToolTip="{DynamicResource plmdownimage}" Command="{Binding LoadFromPLM}" CommandParameter="{Binding Source={StaticResource proxy}, Path=Value}" >
                            <Button.Style>
                                <Style BasedOn="{StaticResource buttondefault}">
                                    <Setter Property="Button.IsEnabled" Value="False"/>
                                    <Setter Property="Control.Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Border Background="{TemplateBinding Background}">
                                                    <StackPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                        <Image Style="{StaticResource ConversionServerDrawingImageStyle}" Height="28" VerticalAlignment="Top"/>
                                                        <TextBlock FontSize="10" Text="{DynamicResource downloadCAD_UnderText}" x:Name="loadFromPLM_Text"/>
                                                    </StackPanel>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="Button.IsMouseOver" Value="True">
                                            <Setter Property="Button.Foreground" Value="White"/>
                                            <Setter Property="Button.Background" Value="{StaticResource ButtonTriggerDefaultColor}"/>
                                        </Trigger>
                                        <DataTrigger Binding="{Binding IsMouseOver, ElementName=loadFromPLM_SP}" Value="True">
                                            <Setter Property="Button.Foreground" Value="White"/>
                                            <Setter Property="Button.Background" Value="{StaticResource ButtonTriggerDefaultColor}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsEnabled, ElementName=loadFromPLM}" Value="False">
                                            <Setter Property="Button.Foreground" Value="#ACACAC"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <StackPanel.Style>
                            <Style>
                                <Setter Property="Panel.Background" Value="{StaticResource LeftDefaultColor}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsMouseOver, ElementName=loadFromPLM_SP}" Value="True">
                                        <Setter Property="Panel.Background" Value="{StaticResource ButtonTriggerDefaultColor}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsMouseOver, ElementName=loadFromPLM}" Value="True">
                                        <Setter Property="Panel.Background" Value="{StaticResource ButtonTriggerDefaultColor}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsEnabled, ElementName=loadFromPLM}" Value="False">
                                        <Setter Property="Button.Cursor" Value="No"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>
                    </StackPanel>


                    <!--複製轉新增-->
                    <StackPanel Orientation="Horizontal" Grid.Row="5" x:Name="copyToAdd_SP">
                        <Button x:Name="copyToAdd" ToolTip="{DynamicResource copyToAdd}" Command="{Binding ShowCopyToAdd}" CommandParameter="{Binding Source={StaticResource proxy}, Path=Value}" >
                            <Button.Style>
                                <Style BasedOn="{StaticResource buttondefault}">
                                    <Setter Property="Button.IsEnabled" Value="False"/>
                                    <Setter Property="Control.Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Border Background="{TemplateBinding Background}">
                                                    <StackPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                        <Image Style="{StaticResource CopyToAddDrawingImageStyle}" Height="28" VerticalAlignment="Top"/>
                                                        <TextBlock FontSize="10" Text="{DynamicResource copyToAdd}" x:Name="copyToAdd_Text"/>
                                                    </StackPanel>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="Button.IsMouseOver" Value="True">
                                            <Setter Property="Button.Foreground" Value="White"/>
                                            <Setter Property="Button.Background" Value="{StaticResource ButtonTriggerDefaultColor}"/>
                                        </Trigger>
                                        <DataTrigger Binding="{Binding IsMouseOver, ElementName=copyToAdd_SP}" Value="True">
                                            <Setter Property="Button.Foreground" Value="White"/>
                                            <Setter Property="Button.Background" Value="{StaticResource ButtonTriggerDefaultColor}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsEnabled, ElementName=copyToAdd}" Value="False">
                                            <Setter Property="Button.Foreground" Value="#ACACAC"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <StackPanel.Style>
                            <Style>
                                <Setter Property="Panel.Background" Value="{StaticResource LeftDefaultColor}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsMouseOver, ElementName=copyToAdd_SP}" Value="True">
                                        <Setter Property="Panel.Background" Value="{StaticResource ButtonTriggerDefaultColor}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsMouseOver, ElementName=copyToAdd}" Value="True">
                                        <Setter Property="Panel.Background" Value="{StaticResource ButtonTriggerDefaultColor}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsEnabled, ElementName=copyToAdd}" Value="False">
                                        <Setter Property="Button.Cursor" Value="No"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>
                    </StackPanel>

                    <!--標記按鈕-->
                    <StackPanel Orientation="Horizontal" Grid.Row="6" x:Name="flaggedBy_SP">
                        <Button x:Name="flaggedBy" ToolTip="{DynamicResource flaggedBy}" Command="{Binding ShowFlaggedBy}" CommandParameter="{Binding Source={StaticResource proxy}, Path=Value}">
                            <Button.Style>
                                <Style BasedOn="{StaticResource buttondefault}">
                                    <Setter Property="Button.IsEnabled" Value="False"/>
                                    <Setter Property="Control.Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Border Background="{TemplateBinding Background}">
                                                    <StackPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                        <Image Style="{StaticResource FlaggedByDrawingImageStyle}" Height="28"/>
                                                        <TextBlock FontSize="10" Text="{DynamicResource flaggedBy}" x:Name="flaggedBy_Text"/>
                                                    </StackPanel>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="Button.IsMouseOver" Value="True">
                                            <Setter Property="Button.Foreground" Value="White"/>
                                            <Setter Property="Button.Background" Value="{StaticResource ButtonTriggerDefaultColor}"/>
                                        </Trigger>
                                        <DataTrigger Binding="{Binding IsMouseOver, ElementName=flaggedBy_SP}" Value="True">
                                            <Setter Property="Button.Foreground" Value="White"/>
                                            <Setter Property="Button.Background" Value="{StaticResource ButtonTriggerDefaultColor}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsEnabled, ElementName=flaggedBy}" Value="False">
                                            <Setter Property="Button.Foreground" Value="#ACACAC"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <StackPanel.Style>
                            <Style>
                                <Setter Property="Panel.Background" Value="{StaticResource LeftDefaultColor}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsMouseOver, ElementName=flaggedBy_SP}" Value="True">
                                        <Setter Property="Panel.Background" Value="{StaticResource ButtonTriggerDefaultColor}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsMouseOver, ElementName=flaggedBy}" Value="True">
                                        <Setter Property="Panel.Background" Value="{StaticResource ButtonTriggerDefaultColor}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsEnabled, ElementName=flaggedBy}" Value="False">
                                        <Setter Property="Button.Cursor" Value="No"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>
                    </StackPanel>

                    <!--插入分件按鈕-->
                    <StackPanel Orientation="Horizontal" Grid.Row="7" x:Name="PlugIn_SP">
                        <Button x:Name="PlugIn" ToolTip="{DynamicResource plugIn}" Command="{Binding ShowPlugInFuncs}" CommandParameter="{Binding Source={StaticResource proxy}, Path=Value}">
                            <Button.Style>
                                <Style BasedOn="{StaticResource buttondefault}">
                                    <Setter Property="Button.IsEnabled" Value="False"/>
                                    <Setter Property="Control.Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Border Background="{TemplateBinding Background}">
                                                    <StackPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                        <Image Style="{StaticResource CreateRelatedItemDrawingImageStyle}" Height="28"/>
                                                        <TextBlock FontSize="10" Text="{DynamicResource plugIn}" x:Name="syncFromPLM_Text"/>
                                                    </StackPanel>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="Button.IsMouseOver" Value="True">
                                            <Setter Property="Button.Foreground" Value="White"/>
                                            <Setter Property="Button.Background" Value="{StaticResource ButtonTriggerDefaultColor}"/>
                                        </Trigger>
                                        <DataTrigger Binding="{Binding IsMouseOver, ElementName=PlugIn_Text}" Value="True">
                                            <Setter Property="Button.Foreground" Value="White"/>
                                            <Setter Property="Button.Background" Value="{StaticResource ButtonTriggerDefaultColor}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsMouseOver, ElementName=PlugIn_SP}" Value="True">
                                            <Setter Property="Button.Foreground" Value="White"/>
                                            <Setter Property="Button.Background" Value="{StaticResource ButtonTriggerDefaultColor}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsEnabled, ElementName=PlugIn}" Value="False">
                                            <Setter Property="Button.Foreground" Value="#ACACAC"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <StackPanel.Style>
                            <Style>
                                <Setter Property="Panel.Background" Value="{StaticResource LeftDefaultColor}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsMouseOver, ElementName=PlugIn_SP}" Value="True">
                                        <Setter Property="Panel.Background" Value="{StaticResource ButtonTriggerDefaultColor}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsMouseOver, ElementName=PlugIn}" Value="True">
                                        <Setter Property="Panel.Background" Value="{StaticResource ButtonTriggerDefaultColor}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsEnabled, ElementName=PlugIn}" Value="False">
                                        <Setter Property="Button.Cursor" Value="No"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>
                    </StackPanel>

                    <!--系統設定按鈕-->
                    <StackPanel Orientation="Horizontal" Grid.Row="9" x:Name="systemSetting_SP" VerticalAlignment="Top">
                        <Button x:Name="systemSetting" Command="{Binding SystemSetting}" CommandParameter="{Binding Source={StaticResource proxy}, Path=Value}" ToolTip="{DynamicResource systemSetting}">
                            <Button.Style>
                                <Style BasedOn="{StaticResource buttondefault}">
                                    <Setter Property="Button.Height" Value="55"/>
                                    <Setter Property="Control.Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Border Background="{TemplateBinding Background}">
                                                    <StackPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                        <Image Style="{StaticResource PhantomDrawingImageStyle}" Height="30"/>
                                                        <TextBlock FontSize="10" Text="{DynamicResource systemSetting}" x:Name="systemSetting_Text"/>
                                                    </StackPanel>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="Button.IsMouseOver" Value="True">
                                            <Setter Property="Button.Foreground" Value="White"/>
                                            <Setter Property="Button.Background" Value="{StaticResource ButtonTriggerDefaultColor}"/>
                                        </Trigger>
                                        <DataTrigger Binding="{Binding IsMouseOver, ElementName=systemSetting_SP}" Value="True">
                                            <Setter Property="Button.Foreground" Value="White"/>
                                            <Setter Property="Button.Background" Value="{StaticResource ButtonTriggerDefaultColor}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <StackPanel.Style>
                            <Style>
                                <Setter Property="Panel.Background" Value="#DF7F00"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsMouseOver, ElementName=systemSetting_SP}" Value="True">
                                        <Setter Property="Panel.Background" Value="{StaticResource ButtonTriggerDefaultColor}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsMouseOver, ElementName=systemSetting}" Value="True">
                                        <Setter Property="Panel.Background" Value="{StaticResource ButtonTriggerDefaultColor}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>
                    </StackPanel>

                    <!--關於按鈕-->
                    <StackPanel Orientation="Horizontal" Grid.Row="10" x:Name="about_SP" VerticalAlignment="Top">
                        <Button x:Name="about" Command="{Binding About}" CommandParameter="{Binding Source={StaticResource proxy}, Path=Value}" ToolTip="{DynamicResource about}">
                            <Button.Style>
                                <Style BasedOn="{StaticResource buttondefault}">
                                    <Setter Property="Button.Height" Value="55"/>
                                    <Setter Property="Control.Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Border Background="{TemplateBinding Background}">
                                                    <StackPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                        <Path Style="{StaticResource AboutIconPath}"/>
                                                        <TextBlock FontSize="10" Text="{DynamicResource about}" x:Name="about_Text"/>
                                                    </StackPanel>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="Button.IsMouseOver" Value="True">
                                            <Setter Property="Button.Foreground" Value="White"/>
                                            <Setter Property="Button.Background" Value="{StaticResource ButtonTriggerDefaultColor}"/>
                                        </Trigger>
                                        <DataTrigger Binding="{Binding IsMouseOver, ElementName=about_SP}" Value="True">
                                            <Setter Property="Button.Foreground" Value="White"/>
                                            <Setter Property="Button.Background" Value="{StaticResource ButtonTriggerDefaultColor}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <StackPanel.Style>
                            <Style>
                                <Setter Property="Panel.Background" Value="#DF7F00"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsMouseOver, ElementName=about_SP}" Value="True">
                                        <Setter Property="Panel.Background" Value="{StaticResource ButtonTriggerDefaultColor}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsMouseOver, ElementName=about}" Value="True">
                                        <Setter Property="Panel.Background" Value="{StaticResource ButtonTriggerDefaultColor}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>
                    </StackPanel>
                    <Grid.LayoutTransform>
                        <ScaleTransform ScaleX="{Binding SetScale}" ScaleY="{Binding SetScale}"/>
                    </Grid.LayoutTransform>
                </Grid>
            </ScrollViewer>
        </Grid>
    </Grid>
</Window>
    

